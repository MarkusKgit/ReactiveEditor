<Window
    x:Class="ReactiveEditor.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:helpers="clr-namespace:ReactiveEditor.Helpers"
    xmlns:local="clr-namespace:ReactiveEditor"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:rxui="http://reactiveui.net"
    xmlns:vm="clr-namespace:ReactiveEditor.ViewModels"
    Title="MainWindow"
    Width="1280"
    Height="720"
    d:DataContext="{d:DesignInstance vm:MainWindowVM,
                                     IsDesignTimeCreatable=True}"
    mc:Ignorable="d">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <Style x:Key="DisableButtonStyle" TargetType="ButtonBase">
                <Style.Triggers>
                    <Trigger Property="IsEnabled" Value="False">
                        <Setter Property="Opacity" Value="0.5" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <ToolBarTray Grid.ColumnSpan="3">
            <ToolBar>
                <Button Command="{Binding AddCircleCommand}" Style="{StaticResource DisableButtonStyle}">
                    <Ellipse
                        Width="20"
                        Height="20"
                        Fill="Black" />
                </Button>
                <Button Command="{Binding AddTriangleCommand}" Style="{StaticResource DisableButtonStyle}">
                    <Polygon
                        Width="20"
                        Height="20"
                        Fill="Black"
                        Points="0,1 1,1 0.5,0"
                        Stretch="Uniform"
                        Stroke="Black" />
                </Button>
                <Button Command="{Binding AddSquareCommand}" Style="{StaticResource DisableButtonStyle}">
                    <Rectangle
                        Width="20"
                        Height="20"
                        Fill="Black" />
                </Button>
                <ToggleButton
                    Margin="2,0"
                    Command="{Binding ToggleSquareSpawnerCommand}"
                    Style="{StaticResource DisableButtonStyle}">
                    <Grid Width="20" Height="20">
                        <Rectangle
                            Width="15"
                            Height="15"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Bottom"
                            Fill="Gray" />
                        <Rectangle
                            Width="15"
                            Height="15"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            Fill="Black" />
                    </Grid>
                </ToggleButton>
            </ToolBar>
            <ToolBar>
                <Button
                    Margin="2,0"
                    Command="{Binding RotateSelectedCommand}"
                    Content="↻"
                    ToolTip="Rotate [R]" />

                <Button
                    Margin="2,0"
                    Command="{Binding DeleteSelectedCommand}"
                    Content="✂"
                    ToolTip="Delete [Del]" />
            </ToolBar>
        </ToolBarTray>
        <Border
            Grid.Row="1"
            BorderBrush="Black"
            BorderThickness="1">
            <StackPanel Orientation="Vertical">
                <TextBlock Text="Selected:" TextAlignment="Center" />
                <ListView
                    x:Name="SelectedInfoView"
                    Margin="0,10,0,0"
                    Background="Transparent"
                    BorderThickness="0"
                    ItemsSource="{Binding SelectedMovables}" />
            </StackPanel>
        </Border>
        <GridSplitter
            Grid.Row="1"
            Grid.Column="1"
            HorizontalAlignment="Stretch" />
        <Border
            Grid.Row="1"
            Grid.Column="2"
            BorderBrush="CornflowerBlue"
            BorderThickness="5">
            <ListView
                x:Name="drawArea"
                helpers:ListViewExtensions.SelectedValues="{Binding SelectedMovables}"
                ItemsSource="{Binding Movables}"
                SelectionMode="Extended">
                <ListView.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas IsItemsHost="True" />
                    </ItemsPanelTemplate>
                </ListView.ItemsPanel>
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="Background" Value="Transparent" />
                        <Setter Property="Canvas.Left" Value="{Binding Left}" />
                        <Setter Property="Canvas.Top" Value="{Binding Top}" />
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Grid RenderTransformOrigin="0.5, 0.5">
                                        <Grid.RenderTransform>
                                            <RotateTransform Angle="{Binding RotationAngle}" />
                                        </Grid.RenderTransform>
                                        <Grid.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter Property="Grid.Effect">
                                                            <Setter.Value>
                                                                <DropShadowEffect
                                                                    BlurRadius="15"
                                                                    Direction="320"
                                                                    ShadowDepth="0"
                                                                    Color="Red" />
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Grid.Style>
                                        <rxui:ViewModelViewHost ViewModel="{Binding}" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
        </Border>
    </Grid>
</Window>